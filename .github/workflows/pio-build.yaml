name: PlatformIO CI
on:
  workflow_call:
   inputs:
      major:
        required: true
        type: string
      minor:
        required: true
        type: string
      patch:
        required: true
        type: string
   outputs:
      artifact:
        description: "The first output string"
        value: ${{ jobs.build.outputs.artifact }}
  push:
    branches:
      - master
      - release/*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get current branch
        id: branch
        run: echo "::set-output name=branch::${GITHUB_REF##*/}"
      - name: Get current datetime
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%dT%H%M%S')"
      - name: Get current time
        id: time
        run: echo "::set-output name=time::$(date +'%H%M%S')"
      - name: Get version
        id: version
        shell: bash
        run: |
              if [ -z "${{ inputs.major }}" ] 
              then
                 echo "::set-output name=version::${{ steps.time.outputs.time }}"
               else
                 echo "::set-output name=version::${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"
              fi
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: '${{ runner.os }}-pip-${{ hashFiles(''**/requirements.txt'') }}'
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: '${{ runner.os }}-${{ hashFiles(''**/lockfiles'') }}'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Install libs
        run: |
          cd SmartEVSE-3
          pio lib install
      - name: Build normal version
        run: PLATFORMIO_BUILD_FLAGS='-DVERSION=\"SERKRI-${{ steps.version.outputs.version }}\" -DDBG=0' pio run -d SmartEVSE-3/ -c SmartEVSE-3/platformio.ini
      - name: Build spiffs
        run: PLATFORMIO_BUILD_FLAGS='-DVERSION=\"SERKRI-${{ steps.version.outputs.version }}\" -DDBG=0' pio run -d SmartEVSE-3/ -c SmartEVSE-3/platformio.ini -t buildfs
      - id: artifact
        run: echo "::set-output name=value::dist-${{ steps.branch.outputs.branch }}-${{ steps.datetime.outputs.datetime }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.value }}
          path: ./SmartEVSE-3/.pio/build/release/*.bin
          retention-days: 10
      - name: Upload HowToFlash.txt
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.value }}
          path: ./SmartEVSE-3/HowToFlash.txt
          retention-days: 10
      - name: Build debug version
        run: |
          PLATFORMIO_BUILD_FLAGS='-DVERSION=\"SERKRI-${{ steps.version.outputs.version }}\" -DDBG=1' pio run -d SmartEVSE-3/ -c SmartEVSE-3/platformio.ini
          mv ./SmartEVSE-3/.pio/build/release/firmware.bin ./SmartEVSE-3/.pio/build/release/firmware.debug.bin
      - name: Upload Artifact debug firmware
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.value }}
          path: ./SmartEVSE-3/.pio/build/release/firmware.debug.bin
          retention-days: 10

    outputs:
      artifact: ${{ steps.artifact.outputs.value }}
